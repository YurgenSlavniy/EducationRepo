# Практическое задание
# 1: Даны два произвольные списка. Удалите из первого списка элементы присутствующие во втором списке.
#     Примечание. Списки создайте вручную, например так:
# my_list_1 = [2, 5, 8, 2, 12, 12, 4]
# my_list_2 = [2, 7, 12, 3]

# 1 способ - использование множеств set для локоничного решения
a = [1, 2, 3, 4] # у нас есть список 1
b = [2, 3]  # у нас есть список 2

result = set(a) - set(b) # попробуем использовать приведение к  классу сет
# задаем переменную и присваиваем ей значение операции вычитания классов set
print(list(result)) # для красивого вывода снова приведём результат к списку
#  посмотрим что получилось и действительно при этих данных всё работает?

# но если наша последовательность будет содержать повторяющиеся элементы
a = [1, 1, 2, 1, 3, 4]
b = [2, 3]
# если мы применим предыдущий метод, мы снова получим в результате [1,4]
# хотя должны получить [1,1,1,4]
# т.к. во множествах удаляются повторяющиеся элементы, приведя к множествам мы теряем единицы
# классический вариант решения - цикл for
# работаем со списками в которых есть дублирование данных.
for number in a: # записываем первый цикл for - для элемента из списка а
   if number in b: # если мы находим этот элемент в списке b
       a.remove(number) # мы удаляем этот элемент из списка а
print(a) # после прохода всех циклов и проверки условий выводим список а из которого исключили элементы b
# что будет если мы проходимся циклом по списку и при этом удаляем элемент из этого же списка?
# вводим иные данные и программа работает неккооректно:
a = [1, 1, 2, 1, 2, 2, 2, 3, 4, 2, 2, 6]
b = [2, 3]
for number in a:
   if number in b:
       a.remove(number)
print(a)
# программа ожет пропускать какие то элементы, если они стоят подряд
# Нужно быть внимательным, когда мы идём циклом по списку и удаляем элементы из этого списка
# Лучше будет организовать цикл по копии этого списка
# Правильный третий пример:
a = [1, 1, 2, 1, 2, 2, 2, 3, 4, 2, 2, 6]
b = [2, 3]

for number in a[:]: # достаточно просто делать срез от начала и до конца списка
# когда делаем таким образом мы будем работать не с самим списком, а создавать его копию

    if number in b:
        a.remove(number) # а удаляем число непосредственно из списка
print(a)
# срезы надо делать не всегда, а только когда делаем удаление из списка


# 2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013. Ваша задача — вывести дату в текстовом виде, например: второе ноября 2013 года. Склонением пренебречь (2000 года, 2010 года)
data = '02.11.2013'
# для начала нужно разбить дату на три части: месяц, год, день
d, m, y = data.split('.') # удобно сделать с помощью функции split
# объявляем переменные  d, m, y , берём нашу дату, используем функцию сплит и в качестве разделителя у нас будет точка
print(d, m, y)
# далее необходимо преобразовать строку в текстовый вид
# самый удобный способ для этого - использование словаря
months = {
    '01': 'Январь',
    '02': 'Февраль',
    '03': 'Март',
    '04': 'Апрель',
    '05': 'Май',
    '06': 'Июнь',
    '07': 'Июль',
    '08': 'Август',
    '09': 'Сентябрь',
    '10': 'Октябрь',
    '11': 'Ноябрь',
    '12': 'Декабрь',
}

days = {
    '01': 'Первое',
    '02': 'Второе',
    '03': 'Третье',
    '04': 'Четвёртое',
    '05': 'Пятое',
    '06': 'Шестое',
    '07': 'Седьмое',
    '08': 'Восьмое',
    '09': 'Девятое',
    '10': 'Десятое',
    '11': 'Олиннадцатое',
    '12': 'Двенадцатое',
    '13': 'Тринадцатое',
    '14': 'Четырнадцатое',
    '15': 'Пятнадцатое',
    '16': 'Шестнадцатое',
    '17': 'Семнадцатое',
    '18': 'Восемнадцатое',
    '19': 'Девятнадцатое',
    '20': 'Двадцатое',
    '21': 'Двадцать первое',
    '22': 'Двадцать второе',
    '23': 'Двадцать третье',
    '24': 'Двадцать четвёртое',
    '25': 'Двадцать пятое',
    '26': 'Двадцать шестое',
    '27': 'Двадцать седьмое',
    '28': 'Двадцать восьмое',
    '29': 'Двадцать девятое',
    '30': 'Тридцатое',
    '31': 'Тридцать первое',
}
# сформируем строку одним из самых удобных способов:
result = f'{days[d]} {months[m]} {y} года.' # Объявим переменную резалт, ставим букву f и будем создавать нашу строчку
# Вначале нам необходимо вывести день текстом. Мы берём словарь days, в качестве ключа мы будем передовать  переменную d
# т.е из 01 мы будем получать слово Первое
# аналогично делаем с месяцем. Берём словарь months, всё это помещаем в фигурные скобки, чтобы можно было встроить переменную в строку. Ключь уже будет переменная м
# после этого год мы выводим без изменений.
print(result)

# 3: Дан список заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут только уникальные элементы исходного.
#     Примечание. Списки создайте вручную, например так:
# my_list_1 = [2, 2, 5, 12, 8, 2, 12]
#
# В этом случае ответ будет:
# [5, 8]

my_list3 = [3, 56 ,77 ,2 , 4, 3 ,77 ,108 , 56, 2, 3]
# воспользуемся способом определения количества вхождения элементов в список
result = [] # объявляем переменную, это будет результирующий список и он пока пустой
for number in my_list3: # переберать будем циклом for
    if my_list3.count(number) == 1: # это метод, который проверяет, сколько раз число входит в список
# если число входит в список 1 раз: count(number) == 1
        result.append(number) # то мы в результирующий список добавляем наше число number
print(result)