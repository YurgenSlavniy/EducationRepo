# Создание и запуск проекта в pyCharm:
# - необходимо создать новый проект.
# - выбрать интерпритатор пайтон
# - создать модуль в котором будем писать код.
# - запуск программы с пайчарм.
#
# Запустим пайчарм первый раз. предлагает сначала импортировать настройки. Соглашаемся с лицензионным использованием. Будем отправлять статистику. Далее предлагается выбрать тему тёмную или светлую. Плагины оставим пок абез изменения. Криейт нью проджект.
# давайте напишем имя проекта. и нажимаем создать! можно изменить папку по умолчанию, путь куда сохранить файл.
# далее при запуске пайчарм будет настраивать окружение.после того как он это сделает мы сможем писать код. последующие разы когда мы будем запускать пайчарм он уже не будет это делать. все будет происходить гораздо быстрее
# перехожу далее в пайчарм и буду писать уже там. этот текст копирую туда же.
#
#Что мы видим, открыв пайчарм? :
#слева (лп) у нас есть структура проекта. Пайчарм создал для нас виртуальное окружение (venv library root) в котором мы можем работать.
#давайте создадим теперь в папке educationCourseAll.py  питон файл. пкм в лп по названию папки во всплывающем меню - new  -->  python file
#файлы у нас зоздаются с расширением py? именно эти файлы понимает интерпритатор, который мы установили.
#давайте напишем нашу первую программу хеллоу ворлд: файл - новый - pr1helloworld.py
#
print('first you read this')
# пайчарм позволяет нам изменять настройки шрифта, также можно изменять темы.
# когда у нас код написан, попробуем запустить наш файл. ПКМ --> run (ctrl shift f10)
# внизу у нас будет открываться окно в котором м будем смотреть как работает программа
# таким образом удобно сразу изменять программ уи смотреть на результат
# запускаем заново и видим у нас есть 2 строчки - first you read this
#
#УРОК 2 -  ПЕРЕМЕННЫЕ ТИПЫ ДАННЫХ ПРЕОБРАЗОВАНИЕ ТИПОВ.
#
# Переменные используют для хранения данных. Переменные можно использовать несколько раз. Можн менять значение и тип переменной.
#
print('Попугайчик')
print('Кеша')
print('в')
print(2)
print('года')
print('научился говорить')
print('своё имя')
print()
print('Через')
print('2')
print('года')
print('Он научился говорить')
print('сколько ему лет ')
print()
print(4)
# Программа просто выводит текст в консоль и когда мы её запустим просто увидим эту историю.
#  что будет если мы захотим изменить имя кеша на кузя? И поменять его возраст.
# в этом помогут переменные.
# Объявление переменной: - имя_переменной = значение переменной
pty = 'значение'
# Объявим три переменные : имя попугайчикаЮ присваиваем значение кеша. возраст попугайчика присваиваем значение 2 и период через который научился говорить пристваиваем 2.
name = 'Кеша'
age = 2
period = 2
# далее внедряем эти переменные в наш код
print('Попугайчик')
print(name) # внедрили переменную
print('в')
print(age) # внедрили переменную
print('года')
print('научился говорить')
print('своё имя')
print()
print('Через')
print(period) # внедрили переменную
print('года')
print('Он научился говорить')
print(age + period) # подсчитываем возраст попугайчика
#
# В программировании очень важно правильно называть переменные. Чтобы по её значению можно было понять для чего она нужна.
# верно: name, age person_name, age, request, report  Неправильно: а ва н56
# стиль имен переменных: маленькие буквы и нижнее подчёркивание имя_переменной
person_name = 'Max'
age = 30
period = 3.2
is_good = True
person = None
# Каждая переменная обладает определённым типом: тип переменной определяет множество значений, которые могут быть ей присвоены и операции которые могут быть с нею произведены.
# Он либо фиксирован в момент объявления переменной и соответствует одному из типов данных предоставляемых языком программирования (статическая типизация). либо в каждый момент соотвветствует типу тех данных, что содержит переменная (динамическая типизация)
# динамическая типизация: как только мы присваиваем значение переменной мы автоматически присваиваем ей соответствующий тип.
# целое число - int
# число с плавающей точкой - float
# логический тип (истина\ложь) - bool
# ничего (пустой тип) - None
# строка - str
#
# разберём типы данных на примере кода
person_name1 = 'Ivan' # верно  # у нас есть переменная Ivan которая называется  person_name1
print(type(person_name1)) # определяем тип данных # и мы можем определить её тип с помощью функции type
# пишем функцию type(person_name1) в скобках указываем переменную у которой мы хотим определить тип, с помощью принт всё это выводим на экран чтобы посмотреть результат.age1 = 34
# в нашем случае получим класс "str" - то есть переменная person_name1 у нас является строкой.
age1 = 30
print(type(age1)) # <class 'int'>
# тип у это переменной целое число
period1 = 3.2
print(type(period1)) # <class 'float'>
# число с плавающей точкой
is_good1 = True
print(type(is_good1)) # <class 'bool'>
# логический тип данных . принимает всего 2 значения: true истина или ложно false
person1 = None
print(type(person1)) # <class 'NoneType'>
#
# очень часто требуется привести один тип данных к другому.
# число к строке str(number)
# строка к числу int(word)
# любые другие преобразования аналагично

birthday_year = '1984'
print(type(birthday_year))
# мы прочитали из файла или ввёл пользователь год рождения и получилась у нас вместа числа строка. т.к записано в ковычках - это строчка.
period2 = 30
print(type(period2))
#  мы хотим подсчитать возраст пользователя через этот период времени.
age2 = int(birthday_year) + period2
# если не привести строку к числу пайтон выдаст ошибку так как не знает как складывать строки с числами
# если хотим получить строчку из этих данных: две строки слепливаются в одну. конкикинация.
age3 = birthday_year + str(period2)
#
##########
