# Практическое задание
# Решить с помощью генераторов списка.

# 1: Даны два списка фруктов.
# Получить список фруктов,
# присутствующих в обоих исходных списках.
#     Примечание: Списки фруктов создайте вручную в начале файла.

fructs1 = ['арбуз', 'дыня', 'апельсин', 'мандарин', 'климентин', 'лимон',]
fructs2 = ['лимон', 'мандарин', 'апельсин', 'яблоко', 'груша', 'черешня',]
fruct_basket = [i for i in fructs1 if i in fructs2]
print(fruct_basket)

# 2: Дан список, заполненный произвольными числами.
# Получить список из элементов исходного, удовлетворяющих следующим условиям:
# Элемент кратен 3,
# Элемент положительный,
# Элемент не кратен 4.
# Примечание: Список с целыми числами создайте вручную в начале файла.
# Не забудьте включить туда отрицательные числа. 10-20 чисел в списке вполне достаточно.

numbers = [1, 3, 5, 6, 7, -8, -9, -10, 11, -12, 13, 18, 23, 76, -895, 908, 1024, 333]
new_numbers = [i for i in numbers if i % 3 == 0 and i > 0 and i % 4 != 0]
print(new_numbers)

# 3. Напишите функцию которая принимает на вход список.
# Функция создает из этого списка новый список из квадратных корней чисел
# (если число положительное) и самих чисел (если число отрицательное)
# и возвращает результат (желательно применить генератор и тернарный оператор при необходимости).
# В результате работы функции исходный список не должен измениться.
# Например:
# old_list = [1, -3, 4]
# result = [1, -3, 2]
# Примечание: Список с целыми числами создайте вручную в начале файла.
# Не забудьте включить туда отрицательные числа. 10-20 чисел в списке вполне достаточно.
import math
numbers = [1, 2, 3, 4, 5, 6, 7, -8, -9, -10, 11, -12, 14, 15, 13, 16, 18, 23, 76, -895, 908, 1024, 333]
copynumbers = numbers.copy()
def sqrt_list(copynumbers):
    result = []
    for i in copynumbers:
        if i < 0:
            result.append(i)
        else:
            el = math.sqrt(i)
            result.append(el)
    return result

print(numbers)
print(sqrt_list(copynumbers))

# 4. Написать функцию которая принимает на вход число от 1 до 100.
# Если число равно 13, функция поднимает исключительную ситуации ValueError
# иначе возвращает введенное число, возведенное в квадрат.
# Далее написать основной код программы. Пользователь вводит число.
# Введенное число передаем параметром в написанную функцию и печатаем результат,
# который вернула функция. Обработать возможность возникновения исключительной ситуации,
# которая поднимается внутри функции
def sqrt(number):
    if number == 13:
        raise Exception(ValueError)
    else:
        return number ** 2

number = int(input('Введите число от 1 до 100: '))
try:
   0 > number > 100
except ValueError:
    print('Нужно было ввести число от 1 до 100')
print(sqrt(number))