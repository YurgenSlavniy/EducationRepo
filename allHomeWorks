<meta charset="utf-8"> 
<script>
	/* <meta charset="utf-8"> - традиционное начало, где мы объявляем кодировку, которую будем использовать utf-8 для корректного отображения всех символов. в нашем случае русскоязычных.
	<script> - начало нашей программы на языке javascript - открывающийся тэг.*/
	alert("Привет, начинающий программист!"); // команда вывода информации на экран в отдельном окне. текстовая информация 
	var name = prompt("Как к вам обращаться?"); // мы задаём переменную командой "var", даём ей имя "name" и присваиваем некоторое значение символом " = " . Затем командой "prompt" даём запрос на ввод данных пользователем. Всё что напечатает пользователь присвоится переменной "name"
	alert("Ну здравствуй, " + name); // мы выводим на экран сообщение "Ну здравствуй, " командой " + " склеиваем строки и о что ввёл пользователь.
	// например пользователь вводит "Яков" в итоге переменной name присваивается значение Яков и выводится на экран сообщение : Ну здравствуй, Яков
	/* ниже тэг /script> закрывает открытый в начале тэг <script>. сама программа или тело программы находится между этими тэгами */
</script>


<meta charset="utf-8">
<script type="text/javascript">
/*1.Конвертер валют
Программа хранит в двух переменных курс доллара и евро. В первой переменной у вас хранится стоимость одного евро в рублях, во второй - стоимость одного доллара в рублях. Вы спрашиваете у пользователя, сколько рублей он хочет сконвертировать, получаете это число и считаете. Результат надо вывести на страницу с помощью alert.*/
	
	var courseeuro = prompt("Введите стоимость 1 евро в рублях"); // создаём переменную courseeuro в которую пользователь вводит курс 1 евро в рублях
	var coursedollar = prompt("Введите стоимость 1 доллара в рублях"); // создаём переменную coursedollar в которую пользователь вводит курс 1 доллара в рублях
	var ruble = prompt("Сколько у вас Рублей?"); // создаём переменную ruble в которую пользователь вводит колличество рублей которую необходимо сконвертировать в доллары и евро

	courseeuro = parseInt(courseeuro); // обьявляем переменную courseeuro числовой (не строковой)
	coursedollar = parseInt(coursedollar); // обьявляем переменную coursedollar числовой (не строковой)
	ruble = parseInt(ruble) // также переменную объявит числовой можно было с помощью символа "+" перед prompt, когда просили пользователя ввести сумму <=> var ruble = +prompt("Сколько у вас Рублей?")

	var euro = ruble / courseeuro // задаём переменную euro , которой присваиваем значение математической операции, где введённая пользователем переменная ruble делится на введёную пользователем переменную courseeuro. этой операцией мы производим конвертацию рублей в евро.
	var dollar = ruble / coursedollar // аналогичная предыдущей операция с помощью которой мы конвертируем рубли в доллары

	alert("У вас " + euro.toFixed(2)  + " Евро или " + dollar.toFixed(2) + " Долларов") // команда вывода на экран в отдельном окне 5 склеенных строк:
	// euro.toFixed(2) и dollar.toFixed(2), где команда "имя_переменной.toFixed(2)" после переменной означает показать 2 знака после запятой

</script> 


<meta charset="utf-8">
<script type="text/javascript">
/*2.Подсчет площади трапеции
Пользователь вводит длину оснований трапеции (a и b), а также высоту трапеции h. Программа выводит сообщение: «Площадь трапеции будет равна <значение>». Площадь вычисляется по формуле ((a + b) / 2) * h, где a, b - основания, h - высота.*/
	var a = prompt("Введите значения длины верхнего основаня трапеции"); 
	var b = prompt("Введите значения длины нижнего основаня трапеции");
    var h = prompt("Введите значение высоты трапеции");
// задаём переменные a,b,h и запрашиваем у пользователя ввести значения этих перемнных.
    a = parseInt(a);
    b = parseInt(b);
    h = parseInt(h);
// присваиваем этим переменным числовые значния с помощью команды parseInt()
    var s = (a + b) * h / 2
// создаём переменную s которой присваиваем значение вычислений площади трапеции, вычисления производятся по формуле с использованием введённых ранее пользователем переменных a,b,h
    alert("Площадь трапеции будет равна " + s );
// выводим на экран в отдельном окне ссобщение, где будет отображатьсе переменная s - площадь трапеции

</script>


<meta charset="utf-8">
<script type="text/javascript">

	/* Игра в загадки
a. Загадать загадку. Если ответ верен – поздравить пользователя. Затем сообщить, что игра окончена.
b. Если ответ неверный – написать пользователю, что он не угадал.
c. Добавить еще 3 загадки. Подсчитать количество правильных ответов, сообщить пользователю.
d. (По желанию). В качестве верного ответа принимать несколько вариантов ответов. Например, «Стул», «стул», «табуретка» и так далее. */
	var userAnswer = prompt("Я хочу сыграть с тобой в одну игру...\n Угадай загадку:\n ЗИМОЙ И ЛЕТОМ ОДНИМ ЦВЕТОМ. ЧТО ЭТО? \n "); 
// создаём специальную переменную (var userAnswer =), которая будет хронить ответ, который ввёл пользователь (через команду prompt)
	var score = 0; // создаём специальную переменную, которая будет подсчитывать число правильных ответов. изночально переменная = 0
	userAnswer = userAnswer.toLowerCase() // специальная команда, которая преобразует строку таким образом, что все большие буквы видоизменяет на маленькие (имя_переменной.toLowerCase() то есть переменная userAnswer, запрашиваемая пользователем автоматически переведёт в нижний регистр маленьких букв все символы которые будут большими буквами )
	if(userAnswer == "елка" || userAnswer == "доллар" ){
// задаём условие: сравниваем ответ пользователя (который находится в переменной userAnswer) с эталонным ответом (userAnswer == "елка") и (userAnswer == "доллар"), используем логический оператор ИЛИ. то есть если ответ пользователя равен == эталонному ответу (елка) или (доллар), то мы выводим на экран сообщение - "Праывльно! Возьми с полки пиражок!"
		alert("Праывльно! Возьми с полки пиражок!"); // сообщение которое выводится в случае правильного ответа, когда ответ совпадает с эталонным ответом
		score++; // к переменной подсчитывающей правильные ответы прибавляется 1, если ответ пользователя совпадает с эталонным ответом
	} else {
	alert("Не угадал!"); // сообщение которое выводится в случае, если пользователь не угадал правильный ответ. userAnswer отличается от эталонного ответа
	}

	userAnswer = prompt("СКОЛЬКО СЕРДЕЦ У ОСЬМИНОГА?"); //специальной переменной (var userAnswer =), которая будет хронить ответ, который ввёл пользователь (через команду prompt) присваивается новое значение
	userAnswer = userAnswer.toLowerCase();
	if(userAnswer == "четыре" || userAnswer == "4" ){
// задаём условие: сравниваем ответ пользователя (который находится в переменной userAnswer) с эталонным ответом (userAnswer == "четыре") и (userAnswer == "4"), используем логический оператор ИЛИ. то есть если ответ пользователя равен == эталонному ответу (четыре) или (4), то мы выводим на экран сообщение - "Праывльно! Возьми с полки пиражок!"
		alert("Праывльно! Возьми с полки пиражок!");
		score++; //к переменной подсчитывающей правильные ответы прибавляется 1, если ответ пользователя совпадает с эталонным ответом
	} else {
		alert("Не угадал!");
// при неправильном ответе команда score++ не выполняется т.к счёт ведётся только правильных ответов, а только выводится сообщение "Не угадал!"
	}
	userAnswer = prompt("Кто президент России?");
	userAnswer = userAnswer.toLowerCase();
	if(userAnswer == "путин"){
		alert("Праывльно! Возьми с полки пиражок!");
		score++;
	} else {
		alert("Не угадал!");
	}
	alert("У вас " + score + " правильных ответов ") // выводим на экран сообщение, которое указывает число правильных ответов

</script>


<meta charset="utf-8">
<script type="text/javascript">
/*Пользователь вводит сумму вклада и процент, который будет начисляться ежегодно. Отобразить размер вклада поочередно на ближайшие 5 лет.*/

// сверху стандартное начало для любой программы в среде разработки javascript. <meta charset="utf-8"> - указываем кодировку для корректного прочтения и отображения русских символов и <script type="text/javascript"> - тэг открытия программы.
	var totalsum = +prompt("Введите сумму, которую вы хотите инвистировать в рублях");
	// создаём переменную  totalsum  которой присваиваем значение, которое введёт пользователь (prompt). + перед prompt означает, что тип данных будет числовой. В эту переменную пользователь вводит сумму, которую он хочет положить на вклад.
	var percent = +prompt("Введите сколько процентов годовых вы хотите получать");
	// создаём переменную percent, которой присвоится числовое значение которое введёт пользователь (+prompt), эта переменная отоброжает проценты годовых по вкладу, которые будут начисяться банком.
	var percent1year = (totalsum * percent / 100);
	// задаём переменную, которой присвоим значение подсчитанное исходя из введёных пользователем данных. Это значение процентов, которые зачислятся за первый год (percent ) на сумму вклада (totalsum)
	var totalsum1year = totalsum + percent1year
	// задаём переменную и присваиваем ей значение: к сумме вклада прибавляем проценты, которые будут начислены за первый год. Таким образом мы подсчитаем сумму которая будет у пользователя после первого года с учётом процентов.
	var percent2year = (totalsum1year * percent / 100);
	// задаём переменную в которой подсчитываем проценты за 2 ой год
	var totalsum2year = totalsum1year + percent2year
	// задаём переменную в которой подсчитываем сумму на счёте после 2 ух лет начисления прцентов
	var percent3year = (totalsum2year * percent / 100);
	// новая переменная с подсчётом процентов за третий год
	var totalsum3year = totalsum2year + percent3year
	// переменная с подсчётом суммы после трёх лет вклада с учётом процентов 
	var percent4year = (totalsum3year * percent / 100);
	// переменная с подсчётом процентов за 4 ый год
	var totalsum4year = totalsum3year + percent4year
	// переменная с подсчётом общей суммы с учётом процентов за 4 ый год
	var percent5year = (totalsum4year * percent / 100);
	// переменная с процентами за пятый год
	var totalsum5year = totalsum4year + percent5year
	// переменная с общей сумммой за 5 лет включая все проценты

	alert("Ваш вклад " + totalsum.toFixed(2) + " Рублей под " + percent.toFixed(2) + " процентов годовых: \n " + " \n" + "Первый год ваша прибыль составит " + percent1year.toFixed(2) + " рублей " + "ваша сумма на вкладе составит "  + totalsum1year.toFixed(2) + " рублей \n" + "Второй год ваша прибыль составит " + percent2year.toFixed(2) + " рублей " + "ваша сумма на вкладе составит "  + totalsum2year.toFixed(2) + " рублей \n" + "Третий год ваша прибыль составит " + percent3year.toFixed(2) + " рублей " + "ваша сумма на вкладе составит "  + totalsum3year.toFixed(2) + " рублей \n" + "четвёртый год ваша прибыль составит " + percent4year.toFixed(2) + " рублей " + "ваша сумма на вкладе составит "  + totalsum4year.toFixed(2) + " рублей \n" + "Пятый год ваша прибыль составит " + percent5year.toFixed(2) + " рублей " + "ваша сумма на вкладе составит "  + totalsum5year.toFixed(2) + " рублей \n");
	// команда вывода на экран. мы склеиваем много строк, используя + . текстовая информация в ковычках "..." выводится как текст, имена переменных без ковычек выводятся значения этих переменных. (имя_переменной.toFixed(2)) - означает, что отображаем 2 знака после запятой.  \n - означает переход на новую строку. Команда вывода выглядит массивной и грамозской.


</script>


<meta charset="utf-8">
<script type="text/javascript">
/*Пользователь вводит сумму вклада и процент, который будет начисляться ежегодно. Отобразить размер вклада поочередно на ближайшие 5 лет.*/
	var summ = +prompt('Введите сумму вклада: '); 
	// задаём переменную summ и запрашиваем у пользователя ввести мумму вклада, присваивая значение переменной summ
	var percent = +prompt('Введите процент для начисления: ');
	// задаём переменную percent и присваиваем ей значение, которое введёт пользователь
	percent = percent / 100;
	// для переменной percent присваиваем новое значение. значение введёное пользователем делим на 100.

	var result = 'Изменение размера вклада по годам: \n';
	// задаём переменную result в которой мы будем хронить строку, которую нужно вывести на экран
	for(var i = 1; i <= 5; i++ ) {
		summ = summ + (summ * percent);
		// Соответственно мы в цикле вычисляем сумму вклада за каждый следующий год. От 1 до 5 . и подсчитав текущее значение summ увеличиваем строчку result
		result += i + " год: " + summ.toFixed(2) + " рублей \n";
		// Переменная result сначала просто равняется вступительному слову, далее мы вычисляем сумму вклада на первый год и к переменной result прибавляем сумму вклада за первый год, далее вычисляем за второй год, и также к result прибавляем эту информацию. Постепенно в переменной result начинает хрониться информация за все 5 лет и мы выводим это значение на экран.
	}

	alert(result);

</script>


<meta charset="utf-8">
<script type="text/javascript">
// Программа по поиску максимума 2 ух чисел

	var a = +prompt("Введите первое число");
	var b = +prompt("Введите первое число");
	// Вводим 2 переменные a, b , которые введёт пользователь . запрашиваем пользователя Ввести 2 числа (команда prompt). + перед +prompt говорит о том что тип данных числовой, а не строковый.
	if(a > b){ // задаём условие - if = Если переменная a больше b 
		var max = a; // в фигурных скобках пишем условие: мы создаём переменную max которой присваивается значение a
	} else { // иначе = else  , и в фигурных скобках прописываем условие для иначе
		max = b; // переменной max присваивается значение b
	}

	alert(max); // выводим на экран значение переменной max - что и будет наибольшим числом

	/*Если мы хотим чтобы при равенстве чисел программа нам писала об этом, участок кода будет выглядить следующим образом:

	if(a > b){ 
		var max = a; 
	} else if(a == b){  // Добавляем ещё одно условие else if . т.е если числа равны (a == b) мы выводим сообщение о том, что числа равны если и это цсловие ложно то программа идёт дальше - присваиваем переменной max = b 
		alert("Числа равны")
	} else { 
		max = b; 
	}
    */
    /*Ещё один вариант программы 
var a = +prompt("Введите первое число");
var b = +prompt("Введите первое число");
var max = a; // мы сразу предполагаем что а - это максимальное число.
if(a < b){
	max = b; // если значение а меньше b , то в переменную мах мы записываем число b
}
alert(max);
  */
}

</script>


<meta charset="utf-8">
<script type="text/javascript">
// пограмма должна подсчитать сумму чисел от 1 до n и выполнить проверку на корректность введённых пользователем данных

		/*
var n = +prompt("Пожалуйста, введите число"); 
	// запрашиваем пользователя ввести число, создаём переменную n
for (var i = 0; i <= n; i++){ 
	document.write(i)
}
	// для переменной i которая изначально = 0 и является счётчиком. для всех i меньших или равных n / мы выводим на экран значение i       (document.write(i)), каждый раз прибавляя к этой переменной 1 (i++) пока i не будет равна n.
		*/
	var n = +prompt("Пожалуйста, введите число"); // запрашиваем пользователя ввести число, создаём переменную n

	/*while(isNaN(n) || n < 0){
		 n = +prompt("Пожалуйста, введите число");
	
	// Пока n не является числом или меньше 0 мы просим пользователя снова ввести число, когда число будетт введено верно, мы идём дальше и выполняем условие. Ниже закомментирован вариант с выводом пользователю сообщений, если он ввёл не число или отрицательное число
	*/
	if(isNaN(n)){
		document.write("Нужно было ввести число")
// Если пользователь ввёл не число, а текст (isNan(Not a Mumber = NaN)) мы выводим на экран сообщение = {document.write("Нужно было ввести число")}	 Проходим первую проверку - если Ложно, приступаем ко второй проверке ...	
	} else if (n < 0){
		document.write("Нужно было ввести положительное число")
// Если пользователь ввёл отрицательное число, мы выводим на экран сообщение = {document.write("Нужно было ввести положительное число")}	Проводим вторую проверку, если ложно выполняем условия следующей команды else
// более короткая запись условий используя логические операции : if(isNan(n) || n < 0) - если n не число ИЛИ n < 0

	} else { 
		var sum = 0; // создаём переменную , которая изначально равна 0 и в кторую мы будем подсчитывать значение суммы всех чисел от 0 до n
		for (var i = 0; i <= n; i++){ 
		sum += i; // каждый раз к переменной sum мы прибавляем значение i. Запись равнозначна (sum = sum + i) таким образом мы подсчитываем сумму всех элеменотов.
		document.write(i + " " + sum + "<br/>" ); // выводим на экран значение переменной i и сумму 
		}
	}

</script>


<meta charset="utf-8">
<script type="text/javascript">
// пограмма должна подсчитать сумму чисел от 1 до n и выполнить проверку на корректность введённых пользователем данных

	do{
		var n = +prompt("Пожалуйста, введите число");
	} while(isNaN(n) || n < 0)
// Сделать то, что написано внутри тела цикла {...} в фигурных скобках, до тех пор пока выполняется выражение которое находится внутри while между скобочками (...) т. е пока переменная n является не числом NaN или меньше 0, будет отрабатывать команда:  var n = +prompt("Пожалуйста, введите число");
	var sum = 0; 
		for (var i = 0; i <= n; i++){ 
		sum += i;
		document.write(i + " " + sum + "<br/>" ); 
		}


</script>


<meta charset="utf-8">
<script type="text/javascript">
// Компьютер загадывает число от 0 до 100. Пользователь должен угадать это число. У него есть ограниченное число попыток. Также компьютер будет давать подсказки пользователю если тот ввёл слишком большое или слишком маленькое число.
	var answer = parseInt(Math.random() * 100); 
// создадим переменную answer, которая будет хронить правильный ответ. В эту переменную при старте программы компьютер должен положить какое то случайное число. В этом нам поможет команда - Math.random(). т. к эта команда загадывает случайное число от 0 до 1, а нам нужно число от 0 до 100, поэтому эту переменную мы сразу умножаем на 100: Math.random() * 100; а с помощью команды parseInt() мы отбрасываем дробную часть.
	var userAnswer = +prompt("Угадайте число от 1 до 100");
// создаём переменную userAnswer, которая будет хронить ответ пользователя,с помощью команды prompt запросим у него ввести число, + перед prompt - числовой тип данных.
	var maxTryCount = 7
// создаём переменную, которая будет содержать число попыток.
	for(var tryCount = 1; tryCount <= maxTryCount; tryCount++){
		if(userAnswer == answer){
			alert("Поздравляем! Вы угадали!");
			break;
		} else if(userAnswer > answer) {
			alert("Вы ввели слишком большое число");
		} else if(userAnswer < answer) {
			alert("Вы ввели слишком маленькое число");
		}
// задаём цикл - для переменной tryCount, которая изначально равна 1, мы каждый раз будем прибавлять единицу (tryCount++), пока она не станет равной переменной maxTryCount (в нашем случае 7) программа будет выполнять следующие действия: 
// если переменная userAnswer будет совпадать с переменной, которую введёт пользователь answer (userAnswer > answer), команда выполняет действие - выводит сообщение "Поздравляем! Вы угадали!". А затем выполняется команда break - выход из цикла. В фигурных скобках - то что выполняет программа.
// Если верхнее условие не выполняется и ложно программа идёт на следующую проверку: else if в скобках условие (userAnswer > answer) переменная userAnswer больше переменной answer, выполняется следующее действие: выводим на экран сообщение {alert("Вы ввели слишком большое число")}. Если это условие ложно, то програма идёт на следующую проверку:
// else if(userAnswer < answer) - если переменная  переменная userAnswer меньше переменной answer, мы выводим соответствующее сообщение {alert("Вы ввели слишком маленькое число");}
		userAnswer = +prompt("У вас осталось " + (maxTryCount - tryCount) + " попыток \n" + "Угадайте число от 1 до 100");
	}
// После проверки всех трёх условий, если пользователь не угадал число, т.е первое условие не было истинным, мы переменной userAnswer присваиваем новое значение, которое просим ввести пользователя. При этом при запросе на ввод мы выводим сообщение в котором указываем число оставшихся попыток, которое высчитываем по формуле (maxTryCount - tryCount), причём действие в скобках выполняется первым у него приоритет.  \n - с помощью этой команды мы переходим на новую строку, где выводится сообщение - "Угадайте число от 1 до 100"
	alert("Правильный ответ: " + answer );
// После того, как переменные станут равны (tryCount = maxTryCount) число попыток заканчивается, мы выходим из цикла и выполняется последняя команда - выводится сообщение с правильным ответом. alert("Правильный ответ: " + answer );
</script>


<meta charset="utf-8">
<script type="text/javascript">
// Компьютер загадывает число от 0 до 100. Пользователь должен угадать это число. Также компьютер будет давать подсказки пользователю если тот ввёл слишком большое или слишком маленькое число. Сделать игру с двумя игроками и бесконечным числом попыток. Сделайте возможность выйти из игры по желанию одного из игроков.
	var answer = parseInt(Math.random() * 100); 
// создадим переменную answer, которая будет хронить правильный ответ. В эту переменную при старте программы компьютер должен положить какое то случайное число. В этом нам поможет команда - Math.random(). т. к эта команда загадывает случайное число от 0 до 1, а нам нужно число от 0 до 100, поэтому эту переменную мы сразу умножаем на 100: Math.random() * 100; а с помощью команды parseInt() мы отбрасываем дробную часть.
	var playerNumber = 1;
// создадим переменную которая будет обозначать какой игрок ходит. Изначально она равна 1 и это значит, что ходит первый игрок.

	while(true){
// создаём цикл while для бесконечного числа попыток и присваиваем ему значение true - ВЕРНО. Внутри цикла помещаем условия выхода из цикла: при нажатии q и когда кто то из игроков угадает число. команда выхода из цикла break.
		var userAnswer = prompt("Угадайте число от 1 до 100 \n" + playerNumber +  " ИГРОК ХОДИТ \n" + "для выхода нажмите q" );
// создаём переменную userAnswer, которая будет хронить ответ пользователя, с помощью команды prompt запросим у него ввести число. Также мы отображаем какой игрок делает ход (+ playerNumber +  " ИГРОК ХОДИТ \n") и пишем какую клавишу надо нажать для выхода из цикла ("для выхода нажмите q" ) . Далее в фигурных скобках идут команды цикла {...}. обратим внимание что перед prompt нету + , то есть изначально возможно ввести строковую информацию, это необходимо т.к для выхода из программы мы используем "q"
		if(userAnswer == "q")
			break;
// Первая проверка: если (userAnswer == "q") пользователь ввёл символ q, программа выполняет команду break; и происходит выход из программы. также после скобок if НЕ ставится точка с запятой.
		userAnswer = parseInt(userAnswer);
// далее командой userAnswer = parseInt(userAnswer); присваиваем переменной userAnswer числовое значение.
		if(userAnswer == answer){
			alert("Поздравляем! Вы угадали! Победил игрок " + playerNumber);
			break;
// Когда первая проверка оказывается ложной (пользователь не нажал q для выхода), происходит следующая проверка: if(userAnswer == answer) услорвие в круглых скобках , если переменная userAnswer совпадает с переменной answer, мы выводим на экран сообщение о победе: ("Поздравляем! Вы угадали! Победил игрок " + playerNumber) и также прикрепляем к строке номер победившего игрока. + playerNumber. Также после сообщения о победе выполняется команда break; и мы выходим из цикла.
		} else if(userAnswer > answer) {
			alert("Вы ввели слишком большое число");
// Если верхнее условие оказалось ложным, выполняется следующая проверка:  else if в скобках условие (userAnswer > answer) переменная userAnswer больше переменной answer, выполняется следующее действие: выводим на экран сообщение {alert("Вы ввели слишком большое число")}. Если это условие ложно, то програма идёт на следующую проверку:
		} else if(userAnswer < answer) {
			alert("Вы ввели слишком маленькое число");
// Если верхнее условие оказалось ложным, выполняется следующая проверка: else if(userAnswer < answer) - если переменная  userAnswer меньше переменной answer, мы выводим соответствующее сообщение {alert("Вы ввели слишком маленькое число");}
		}

		if(playerNumber == 1)
			playerNumber = 2;
		else 
			playerNumber = 1;
// После прохождения трёх проверок и пользователь не угадал число, ему выводится сообщение о том что введённое им число больше или меньше, программа выполняет следующую проверку: Если переменная счётчик игрока (playerNumber == 1) playerNumber равняется единице, то после прохождения проверок она становится равной 2 т.е ходит второй игрок. в противном случае (если не равна 1) она становится равной 1. С помощью этих проврок мы определяем чей сейчас ход, какой игрок ходит. 
	}

	alert("Правильный ответ: " + answer );
// После выхода из цикла и вывода сообщения о победе одного из игроков появляется сообщение, которое показывает правильный ответ: alert("Правильный ответ: " + answer );
</script>


<meta charset="utf-8">
<script type="text/javascript">
// Программа загадывает случайные числа, выводит их на экран и предлагает пользователю запомнить их. Затем пользователь программы должен вспомнить первое число, последнее число и число с произвольным порядковым номером.	
	var numbers = [34, 56, 87, 90, 67];
// Создаём переменную numbers в которую помещаем массив из 5 элементов. Элементы вводим самостоятельно через запятую и пробел после запятой. Элементы массива помещаются в квадратные скобки. 
	alert("Запомните числа и их порядок: " + numbers);
// Выводим на экран сообщение "Запомните числа и их порядок: " и через + прибавляем строку с массивом. В итоге нам выведут на экран сообщение и массив из 5 чисел. Когда мы указываем переменную содержащую массив, выводятся все элементы массива.
	var userAnswer = +prompt("Каким было первое число? ");
// Создаём переменную userAnswer и запрашиваем у пользователя ввести число - первый элемент массива. Сразу сконвертируем его в целое число с помощью + перед командой prompt и присвоим переменной userAnswer это значение, которое ввёл пользователь.
	if(userAnswer == numbers[0]){
		alert("Это правильный ответ! ");
	} else {
		alert("Ошибка! Правильный ответ " + numbers[0]);
	}
// Пользуемся командой if - если . Если в круглых скобках условие (переменная введённая пользователем userAnswer совпадает с первым элементом массива ) (userAnswer == numbers[0]), для обращения к первому элементу массива, мы пишем имя массива и в квадратных скобках обращаемся к элементу массива. т.к. в массивах отсчёт начинается с нуля, то первый элемент массива имеет порядковый номер 0. numbers[0]. Затем в фигурных скобках {...} пишем команды, которые будут выполняться, если условие в круглых скобках (userAnswer == numbers[0]) окажится ВЕРНЫМ. : Если (ответ пользователя совпадает с первым элементом массива) мы выводим сообщение {alert("Это правильный ответ! ")}. Если условие оказывается ЛОЖНЫМ, мы переходим к команде else - иначе. И выполняем условие относящееся к команде иначе, т.е выводим на экран сообщение "Ошибка! Правильный ответ "  и прибавляем к этой строке оператором + значение первого элемента массива numbers[0].
	userAnswer = +prompt("Каким было последнее число? ");
// Теперь переменной userAnswer мы присваиваем новое значение, которое введёт пользователь. Запрашиваем пользователя ввести число  +prompt("Каким было последнее число? ")
	if(userAnswer == numbers[ numbers.length - 1 ]){
		alert("Это правильный ответ! ");
	} else {
		alert("Ошибка! Правильный ответ: " + numbers[ numbers.length - 1 ]);
	}
// Аналогично предидущей проверке: Если выполняется условие в круглых скобках if(userAnswer == numbers[numbers.lenght - 1]). т.е переменная введённая пользователем userAnswer совпадает с последним элементом массива, программа выдаёт сообщение "Это правильный ответ! " ДЛЯ ТОГО ЧТОБЫ ОБРАТИТЬСЯ К ПОСЛЕДНЕМУ ЭЛЕМЕНТУ МАССИВА мы воспользуемся командой numbers.lenght - которая показывает длину массива. То есть в массиве numbers мы обращаемся к элементу в квадратных скобках numbers[numbers.lenght - 1] длина массива - 1 т.к отчёт начинается с нулевого элемента. в нашем случае длина массива 5 символов и мы обращаемся к элементу чей порядковый номер 4, а т.к отсчёт ведётся с нуля, То это ПЯТЫЙ элемент массива или последний. 0.1.2.3.4. = 5 элементов. После прохождения первой проверки, если условие оказывается Ложным, мы переходим ко 2 ой проверке: else {alert "Ошибка! Правильный ответ " + numbers[numbers.lenght - 1])} иначе выводим сообщение "Ошибка! Правильный ответ " и выводим правильный ответ - значение последнего элемента массива: numbers[numbers.lenght - 1]
 	var n = parseInt(Math.random() * numbers.length);
 // Создаём переменную n , для которой генерируем случайное число от 0 до 4 - это порядковый номер элемента массива. присваиваем числовое значение переменной с помощью команды  parseInt(), с помощью команды Math.random() мы генерируем случайное число. сгенерируется число от 0 до 1 - дробное число. с помощью команды parseInt() избавляемся от дробной части. а чтобы это число было от 0 до 4 ёх мы умножаем его на длину массива, которую получим с помощью команды numbers.lenght
	userAnswer = +prompt("Каким было число с порядковым номером  " + (n + 1) + "?" ); 
// Теперь переменной userAnswer мы присваиваем новое значение, которое введёт пользователь. Запрашиваем пользователя ввести число  +prompt("Каким было число с порядковым номером  " + (n + 1) + "?" ). (n + 1) - пользователь будет считать элементы не с 0, а с 1 поэтому чтобы не путать его и порядковый номер совпадал с положением элемента массива мы к индексу элемента n прибавляем 1
	if(userAnswer == numbers[ n ]){
		alert("Это правильный ответ! ");
	} else {
		alert("Ошибка! Правильный ответ " + numbers[ n ]);
	}
// Далее мы проверяем условие : if(userAnswer == numbers[ n ]) Если переменная введённая пользователем совпадает с элементом маассива порядкового номера n , мы выводим сообщение {alert("Это правильный ответ! ")}; если ответ не совпадает мы выполняем условие else, которое находится в фигурных скобках {alert("Ошибка! Правильный ответ " + numbers[n])}; т.е выводим на экран сообщение "Ошибка! Правильный ответ " и пишем правильный ответ numbers[n].
</script>


<meta charset="utf-8">
<script type="text/javascript">
// Программа загадывает случайные числа, выводит их на экран и предлагает пользователю запомнить их. Затем пользователь программы должен вспомнить первое число, последнее число и число с произвольным порядковым номером.	
	var numbers = [];
// Создаём переменную numbers которая изначально пустой массив, в которой мы в дальнейшем добавим x случайных сгенерированный чисел.
	var x = 7;
// создаём переменную x которой присваиваем значение числа элементов массива. То есть в массив мы добавим х элементов, в нашем случае 7
	for(var i = 0; i <= x; i++){
		var randomNumber = parseInt(Math.random() * 100);
		numbers.push(randomNumber);
	}
// Создаём цикл: для специальной переменной i которая является счётчиком и изначально равна 0, мы будем прибавлять единицу 	i++, пока эта переменная не станет равной х. (i <= x ). Пока переменная меньше или равна х выполняется условие цикла в фигурных скобках, как только переменная i станет больше чем переменная х , мы выходим из цикла и идем дальше по программе.
// Тело цикла, содержащееся в фигурных скобках - мы создаём переменную var randomNumber, которой присваиваем значение случайно сгенерированного числа командой Math.random(). т.к число генерируется от 0 до 1, мы умножаем его на 100 (Math.random() * 100) затем командой parseInt мы избавляемся от дробной части, обозначая сгенерированное число как тип данных числовое. parseInt(Math.random() * 100) таким образом переменной randomNumber присваивается случайное целое число. Затем с помощью команды numbers.push(randomNumber) мы в наш пустой массив добавляем сгенерированное число и так произходит х раз, пока мы не выйдем из цикла. при выходе из цикла наш созданный ранее пустой массив numbers = [] будет содержать х сгенерированных элементов.
	alert("Запомните числа и их порядок: " + numbers);
// Выводим на экран сообщение "Запомните числа и их порядок: " и через + прибавляем строку с массивом. В итоге нам выведут на экран сообщение и массив из х чисел. Когда мы указываем переменную содержащую массив, выводятся все элементы массива.
	var userAnswer = +prompt("Каким было первое число? ");
// Создаём переменную userAnswer и запрашиваем у пользователя ввести число - первый элемент массива. Сразу сконвертируем его в целое число с помощью + перед командой prompt и присвоим переменной userAnswer это значение, которое ввёл пользователь.
	if(userAnswer == numbers[0]){
		alert("Это правильный ответ! ");
	} else {
		alert("Ошибка! Правильный ответ " + numbers[0]);
	}
// Пользуемся командой if - если . Если в круглых скобках условие (переменная введённая пользователем userAnswer совпадает с первым элементом массива ) (userAnswer == numbers[0]), для обращения к первому элементу массива, мы пишем имя массива и в квадратных скобках обращаемся к элементу массива. т.к. в массивах отсчёт начинается с нуля, то первый элемент массива имеет порядковый номер 0. numbers[0]. Затем в фигурных скобках {...} пишем команды, которые будут выполняться, если условие в круглых скобках (userAnswer == numbers[0]) окажится ВЕРНЫМ. : Если (ответ пользователя совпадает с первым элементом массива) мы выводим сообщение {alert("Это правильный ответ! ")}. Если условие оказывается ЛОЖНЫМ, мы переходим к команде else - иначе. И выполняем условие относящееся к команде иначе, т.е выводим на экран сообщение "Ошибка! Правильный ответ "  и прибавляем к этой строке оператором + значение первого элемента массива numbers[0].
	userAnswer = +prompt("Каким было последнее число? ");
// Теперь переменной userAnswer мы присваиваем новое значение, которое введёт пользователь. Запрашиваем пользователя ввести число  +prompt("Каким было последнее число? ")
	if(userAnswer == numbers[ numbers.length - 1 ]){
		alert("Это правильный ответ! ");
	} else {
		alert("Ошибка! Правильный ответ: " + numbers[ numbers.length - 1 ]);
	}
// Аналогично предидущей проверке: Если выполняется условие в круглых скобках if(userAnswer == numbers[numbers.lenght - 1]). т.е переменная введённая пользователем userAnswer совпадает с последним элементом массива, программа выдаёт сообщение "Это правильный ответ! " ДЛЯ ТОГО ЧТОБЫ ОБРАТИТЬСЯ К ПОСЛЕДНЕМУ ЭЛЕМЕНТУ МАССИВА мы воспользуемся командой numbers.lenght - которая показывает длину массива. То есть в массиве numbers мы обращаемся к элементу в квадратных скобках numbers[numbers.lenght - 1] длина массива - 1 т.к отчёт начинается с нулевого элемента. в нашем случае длина массива х символов и мы обращаемся к элементу чей порядковый номер х -1, а т.к отсчёт ведётся с нуля, То это х элемент массива или последний. 0.1.2.3.4... = x элементов. После прохождения первой проверки, если условие оказывается Ложным, мы переходим ко 2 ой проверке: else {alert "Ошибка! Правильный ответ " + numbers[numbers.lenght - 1])} иначе выводим сообщение "Ошибка! Правильный ответ " и выводим правильный ответ - значение последнего элемента массива: numbers[numbers.lenght - 1]
 	var n = parseInt(Math.random() * numbers.length);
 // Создаём переменную n , для которой генерируем случайное число от 0 до 4 - это порядковый номер элемента массива. присваиваем числовое значение переменной с помощью команды  parseInt(), с помощью команды Math.random() мы генерируем случайное число. сгенерируется число от 0 до 1 - дробное число. с помощью команды parseInt() избавляемся от дробной части. а чтобы это число было от 0 до 4 ёх мы умножаем его на длину массива, которую получим с помощью команды numbers.lenght
	userAnswer = +prompt("Каким было число с порядковым номером  " + (n + 1) + "?" ); 
// Теперь переменной userAnswer мы присваиваем новое значение, которое введёт пользователь. Запрашиваем пользователя ввести число  +prompt("Каким было число с порядковым номером  " + (n + 1) + "?" ). (n + 1) - пользователь будет считать элементы не с 0, а с 1 поэтому чтобы не путать его и порядковый номер совпадал с положением элемента массива мы к индексу элемента n прибавляем 1
	if(userAnswer == numbers[ n ]){
		alert("Это правильный ответ! ");
	} else {
		alert("Ошибка! Правильный ответ " + numbers[ n ]);
	}
// Далее мы проверяем условие : if(userAnswer == numbers[ n ]) Если переменная введённая пользователем совпадает с элементом маассива порядкового номера n , мы выводим сообщение {alert("Это правильный ответ! ")}; если ответ не совпадает мы выполняем условие else, которое находится в фигурных скобках {alert("Ошибка! Правильный ответ " + numbers[n])}; т.е выводим на экран сообщение "Ошибка! Правильный ответ " и пишем правильный ответ numbers[n].
</script>


<meta charset="utf-8">
<script type="text/javascript">
// Пользователю будут предлагатья английские слова и он должен вспомнить их перевод. Если пользователь вспомнил неправильно, ему будет показан правильный перевод. Если пользователь вспомнил перевод и ввёл его правильно, это слово ему больше показываться не будет.
	var words = [
		["issues", "вопросы"],
		["attached", "прикрепленный"],
		["edit", "редактировать"],
		["merge", "поглощать"],
		["conversation", "разговор"],
	];
// создадим многомерный массив. т. е массив элементами которого также являются массивы. Создали массив words, внутри которого содержатся ещё 5 массивов, каждый из которых содержит 2 элемента - английское слово и его перевод на русский язык.
// для обращение к элементам массива... words[0] - мы обращаемся к первому элементу массива, которым также является массив ["issues", "вопросы"]. words[4] - обращаемся к 5 ому элементу массива ["conversation", "разговор"]. words[3][0] обращаемся к 4 ому элементу массива, а в нём к первому элементу. 4 ого массива т. е вызываем элемент "merge"... words[1][1] - "прикрепленный"
	while(words.length != 0){
// Создаём цикл. Пока длина массива не равна нулю цикл выполняется, как только длина массива words.length станет равной 0 , выйдим из цикла. При каждом правильном ответе мы из массива убираем угаданную пару слов, пока длина массива в итоге не станет равной 0, т е. мы угодали все слова.
		var randEngWord = parseInt(Math.random() * words.length);
// создаём переменную randEngWord которой присваиваем случайное значение, которое мы задаём командой Math.random(). умножаем это значение на длину массива words, которую мы вычислим с помощью команды имя_массива.length : (Math.random() * words.length). Чтобы избавиться от дробной части обозначаем тип переменной как числовой с помощью команды parseInt(): parseInt(Math.random() * words.length). т.к наш массив состоит из 5 элементов - мы получим случайное число от 0 до 4 и переменной randEngWord присовится это случайное значение.
		var userTranslete = prompt("Как переводится слово: " + words[randEngWord][0] );
// создаём переменную userTranslete, которая будет содержать ответ пользователя и просим его ввести перевод слова, которое ему будет показано и которое содержится в одном из 5 массивов. командой prompt мы просим пользователя ввести перевод слова, далее мы обращаемся к массиву к элементу который будет содержаться в переменной randEngWord (от 0 до 4 ёх). Обратившись к элементу массива, который также является массивом из 2 ух слов, мы обращаемся к первому элементу вложенного массива [0]. т. е к английскому слову. words[randEngWord][0] таким образом в запросе пользователю на ввод данных будет содержаться фраза например prompt("Как переводится слово: " + words[2][0] ) (Как переводится слово: edit ?) 
		if(userTranslete == words[randEngWord][1]){
			alert("Это правильный ответ! ");
			words.splice(randEngWord, 1);
// Далее мы сравниваем ответ пользователя, который находится в переменной userTranslete со вторым элементом строки массива words[randEngWord][1], где 2 ой элемент это перевод первого элемента на русский язык. Если перевод верный мы выводим соответствующее сообщение alert("Это правильный ответ! "); и выполняем команду words.splice(randEngWord, 1); - эта команда удалит угаданное слово т. е удалит элемент массива randEngWord - случайно сгенерированный ранее. в скобках указываем, что нам нужно удалить randEngWord элемент, 1 означает, что с randEngWord элемента мы хотим удалить 1 элемент. words.splice(randEngWord, 1). т.е мы удаляем элемент массива, который является массивом из пары слов, которые угадал пользовател. После удаления из массива одного элемента у нас изменяется длина массива - words.length и так пока мы не угадаем все слова.
		} else {
			alert("Вы не угадали. Правильный ответ: " + words[randEngWord][1]);
// Если пользователь не угадал, мы выводим сообщение "Вы не угадали. Правильный ответ: " и выводим правильное слово, которым является второй элемент массива. т.к наш массив состоит из  массивов, которые в свою очередь состоят из английского слова - первый элемент масива[0] и из перевода этого слова - второй элемент массива [1].
		}
	}
	alert("Поздравляем вы угадали все слова!");
// после выхода из цикла, когда угадали все слова выводим финальное сообщение.	
</script>


